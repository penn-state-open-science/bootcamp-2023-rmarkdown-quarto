---
title: "Reproducible workflows"
subtitle: "...with R Markdown, Quarto"
author: ["Rick Gilmore", "Jennifer Valcin"]
institute: ["Psychology/CSC", "PSU Libraries"]
bibliography: bib/refs.bib
csl: bib/apa.csl
format: 
  revealjs:
    theme: simple
    # beige, blood, dark, default, league, moon, night, serif, simple, sky, solarized
---

# Motivation

---

![](https://upstarthr.com/wp-content/uploads/2011/06/hit-by-bus.jpg){fig-align="center"}

## What's your project's bus number?

- Could a colleague regenerate/reproduce your work?
- *Methods reproducibility* [@Goodman2016-fi]
    - Precursor to/prerequisite for other kinds of reproducibility^[i.e., *replication*]

## DRY WIT

- **D**on't **R**epeat **Y**ourself
    - Script/automate
    - Use functions
- **W**rite **I**t **D**own
    - It = what you did and how
    - In a form someone else can make use of

::: {.aside}

Your time and others' is valuable.

:::

## {background-image="img/OneRingtoRuleThemAll-6x4.jpg" background-size="contain"}

---

- One *tool*
- Transparent, reproducible, version-controlled
- Many outputs...

# Background

## What is R Markdown?

- R Markdown [@allaire_et_al; @xie_allaire_grolemund; @xie_dervieux_riederer]
- File format for making dynamic documents using R.
- Written in plain text [Markdown](https://www.markdownguide.org) + chunks of embedded code (in R or other languages)
- Explicitly links your data with your code and output creating a fully reproducible workflow
- Suite of R [@r-lang] packages that support "literate programming" [@Knuth1984-ot]

---

:::: {.columns}

::: {.column width="40%"}

![Donald Knuth [@Roberts2018-rz]](https://static01.nyt.com/images/2018/12/18/science/18SCI-KNUTH1/merlin_148126767_cd44bb13-bc4d-4eeb-b1b7-73cc4dc174e7-superJumbo.jpg?quality=75&auto=webp)

:::

::: {.column width="60%"}

> Literate programming is a methodology that combines a programming language with a documentation language, thereby making programs more robust, more portable, more easily maintained...

[@knuth_undated-mi]

:::

::::

---

:::: {.columns}

::: {.column width="40%"}

![Donald Knuth [@Roberts2018-rz]](https://static01.nyt.com/images/2018/12/18/science/18SCI-KNUTH1/merlin_148126767_cd44bb13-bc4d-4eeb-b1b7-73cc4dc174e7-superJumbo.jpg?quality=75&auto=webp)

:::

::: {.column width="60%"}

> ...and arguably more fun to write than programs that are written only in a high-level language. The main idea is to treat a program as a piece of literature, addressed to human beings rather than to a computer.

[@knuth_undated-mi]

:::

::::

## Don't worry

::: {.incremental}

- You don't have to be a programmer, or a good programmer, to use these tools!

- But using them will probably inspire you to become a programmer or a better one.

- And you don't have to use R. The tools support other languages^[bash, JavaScript, mysql, octave, ruby, sas, stata, fortran, python, etc.].

- "*The main idea is to treat a program as a piece of literature, addressed to human beings rather than to a computer.*" [@knuth_undated-mi]

:::

## {background-iframe="https://quarto.org/"}

<!-- ## [Markdown](https://www.markdownguide.org) -->

<!-- - Write human-readable text documents -->
<!--     - Words, images, videos, web links -->
<!-- - Convert to computer-readable documents (.html, .pdf, .docx, .pptx) -->
<!-- - [R Markdown](https://rmarkdown.rstudio.com) adds *executable computer code* -->

## Benefits of using R Markdown for Open Science

- Seamless integration of data analysis and reporting
- Dynamic documents for real-time updates
- Wide variety of output formats (HTML, PDF, Word, etc.)
- Version control and collaboration with Git/GitHub
- Enhances both research transparency and efficiency

## Reproducible Data Analysis with R Markdown

- Project structure and file organization
- Managing data and code files
- Demonstrating reproducibility in R Markdown steps
- Rerunning code chunks and regenerating outputs
- Utilizing R package checkpoints for consistent environments

## Visualizations and Results Reporting

- Create interactive and static visualizations
- Utilize popular R packages for data visualization
- Incorporate interactive plots using Shiny and other tools
- Customize and styling output documents
- Themes and templates for consistent branding
- Control layout and appearance of the final report

## Collaboration and Sharing in Open Science

- Public accessibility and transparency of scientific communication
- Web-based tools facilitate scientific collaboration
- Using Git/GitHub for version control
- Creating and cloning repositories
- Collaborating with colleagues in a shared repository
- Sharing R Markdown reports with the community

## Benefits of using coding languages like R

- **Reproducibility**
  - Code-based workflows allow for easy replication and sharing of analyses.
  - Results can be reproduced precisely, ensuring transparency and accountability.

- **Flexibility and Customization**
  - Coding languages offer more control over data manipulation, analysis, and visualization.
  - Users can create custom functions and packages tailored to their specific needs.

## Benefits of using coding languages like R

- **Automation and Efficiency**
  - Automate repetitive tasks and streamline data analysis pipelines.
  - Batch processing and scripting enable efficient handling of large datasets.

- **Integration with Open Science Practices**
  - R facilitates reproducible research with tools like R Markdown and version control.
  - Supports data sharing, collaboration, and open-source development.

## Benefits of using coding languages like R

- **Cost and Accessibility**
  - R is open-source and free to use, making it accessible to researchers and students worldwide.
  - Reduces the need for expensive software licenses.

- **Continuous Development and Innovation**
  - Coding languages continuously evolve with new features and improvements.
  - Users can leverage cutting-edge statistical methods and techniques.
  
## Benefits of using coding languages like R

- **Scalability**
  - Coding languages can handle larger datasets and more complex analyses.
  - Ideal for research with growing data requirements.

- **Data Privacy and Security**
  - Local data processing in coding languages offers more control over data security.
  - Especially relevant for sensitive or confidential data.

## Challenges in Reproducibility with Point and Click Programs

- Often hides certain data manipulation steps performed in the background.
- Users may overlook or forget to document these steps, leading to non-reproducible results.
- Sharing analyses with others can be challenging.

---

- Recipients may not have access to the same version or settings, causing discrepancies.
- Inadequate tracking of changes with no version control, decreasing transparency and reproducibility.
  
## Challenges in Reproducibility with Point and Click Programs

- Manual data manipulation is prone to human error.
- Limited scripting capabilities.
- Vendor lock-in (\$\$\$!) and dependency on the software's availability and updates.
- Outputs lack visibility into the underlying code and calculations.

---

- Difficult to assess the validity of results without access to the analysis steps.
  - Large-Scale projects present a challenge.
  - Difficult to maintain consistency and reproducibility over time.

## Using R Markdown you can create:

- Readable documents
- Dashboards
- Interactive documents
- Presentations
- Books
- Websites and more!

## {background-iframe="https://rmarkdown.rstudio.com/gallery.html" background-interactive=true}

## Specific use cases

- [Data Analysis](https://github.com/gilmore-lab/sex-differences-project)
- [Presentations](https://github.com/penn-state-open-science/bootcamp-2023-rmarkdown-quarto/)
- [Websites](https://github.com/penn-state-open-science/bootcamp-2023)
- [Reports](https://databrary.github.io/analytics/weekly.html)

## What can *you* make with R Markdown/Quarto?

# Resources

## Online

- [The Definitive Guide to R Markdown](https://bookdown.org/yihui/rmarkdown/)

- [Quarto.org](https://quarto.org)

## Quarto

This talk was prepared using [Quarto](https://quarto.org).
Quarto enables you to weave together content and executable code into a finished presentation. 
To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

## RStudio

[RStudio](https://posit.co/products/open-source/rstudio/) is an integrated development environment (IDE) for R and Python.  
It is a free and open source software program provided by [Posit](https://posit.co).

## GitHub

The files are rendered into a web site that is hosted on GitHub <https://github.com>.

GitHub is a web service for sharing computer code. It has a "pages" feature that also allows the (free) hosting of simple websites.

GitHub supports `git`, a computer program used to put documents under version control.

## References
